{
    "dataset_name": "Human POV Manipulation Dataset",
    "version": "1.0.0",
    "description": "This dataset contains first-person perspective videos and sensor data of human hand manipulation tasks. Data is captured using a head-mounted ZED stereo camera that provides synchronized RGB, depth, and motion information. It is ideal for research in learning-based robotics manipulation, imitation learning, and vision-based control.",
    "contact": {
      "name": "Archer Lin",
      "email": "lin1524@purdue.edu",
      "institution": "Purdue University"
    },
    "citation": "If you use this dataset in your work, please cite: [ Citation Placeholder ].",
    "license": "CC BY 4.0",
    "data_format": "Each recorded session is stored in a dedicated subfolder that contains separate folders and files for RGB images, depth maps, video, and synchronized sensor data.",
    "data_structure": {
      "data": {
        "description": "A folder representing a recorded manipulation task session.",
        "naming_convention": "{date}_{task_name}_{data_id}",
        "contents": {
          "rgb_left": {
            "description": "Folder containing RGB keyframe images from the left camera of the ZED stereo camera.",
            "image_name_template": "{sequence_id}_{timestamp}.{file_type}",
            "file_type": "png",
            "resolution": "1280x720"
          },
          "rgb_right": {
            "description": "Folder containing RGB keyframe images from the right camera of the ZED stereo camera.",
            "image_name_template": "{sequence_id}_{timestamp}.{file_type}",
            "file_type": "png",
            "resolution": "1280x720"
          },
          "depth": {
            "description": "Folder containing keyframe depth maps corresponding to each RGB frame.",
            "image_name_template": "{sequence_id}_{timestamp}.{file_type}",
            "file_type": "png",
            "resolution": "1280x720"
          },
          "video": {
            "description": "MP4 video recording of the manipulation task from the ZED stereo camera.",
            "file_type": "mp4",
            "notes": "Provides continuous visual context of the task execution."
          },
          "info.json": {
            "description": "Metadata file for the session, detailing task information and object interactions.",
            "file_type": "json",
            "fields": [
              "task_name",
              "task_description",
              "object_used",
              "duration",
              "environment",
              "annotations"
            ]
          },
          "result.csv": {
            "description": "CSV file containing time-synchronized motion data including hand position, camera pose, and world coordinates.",
            "file_type": "csv",
            "fields": [
              "sequence_id",
              "timestamp",
              "hand_position_x", HaMeR, DynHaMR
              "hand_position_y", HaMeR, DynHaMR
              "hand_position_z", HaMeR, DynHaMR
              "hand_rotation_x", HaMeR, DynHaMR
              "hand_rotation_y", HaMeR, DynHaMR
              "hand_rotation_z", HaMeR, DynHaMR
              "hand_grasp_state", HaMeR, DynHaMR compute algorithm with 3D object depth (GroundedSAM2, ZED Depth)
              "object1_position_x", GroundedSAM2, ZED Depth
              "object1_position_y", GroundedSAM2, ZED Depth
              "object1_position_z", GroundedSAM2, ZED Depth
              "object1_rotation_x", GroundedSAM2, ZED Depth
              "object1_rotation_y", GroundedSAM2, ZED Depth
              "object1_rotation_z", GroundedSAM2, ZED Depth
              "object2_position_x", GroundedSAM2, ZED Depth
              "object2_position_y", GroundedSAM2, ZED Depth
              "object2_position_z", GroundedSAM2, ZED Depth
              "object2_rotation_x", GroundedSAM2, ZED Depth
              "object2_rotation_y", GroundedSAM2, ZED Depth
              "object2_rotation_z", GroundedSAM2, ZED Depth
              "camera_position_x", ZED Position Tracking
              "camera_position_y", ZED Position Tracking
              "camera_position_z", ZED Position Tracking
              "camera_orientation_x", ZED Position Tracking -> need to compute rotation matrix to measure world position
              "camera_orientation_y", ZED Position Tracking
              "camera_orientation_z", ZED Position Tracking
              "camera_orientation_w", ZED Position Tracking
              "world_hand_position_x", world_position = camera_position + R * hand_position
              "world_hand_position_y",
              "world_hand_position_z",
              "world_hand_orientation_x", Convert Camera Quaternion to Rotation Matrix -> Convert Hand/Object Rotation to a Rotation Matrix -> Compute the World Rotation -> Convert Back to Quaternion
              "world_hand_orientation_y",
              "world_hand_orientation_z",
              "world_hand_orientation_w",
              "world_object1_position_x", world_position = camera_position + R * object1_position
              "world_object1_position_y",
              "world_object1_position_z", 
              "world_object1_orientation_x", Convert Camera Quaternion to Rotation Matrix -> Convert Hand/Object Rotation to a Rotation Matrix -> Compute the World Rotation -> Convert Back to Quaternion
              "world_object1_orientation_y",
              "world_object1_orientation_z",
              "world_object1_orientation_w"
              "world_object2_position_x", world_position = camera_position + R * object2_position
              "world_object2_position_y",
              "world_object2_position_z",
              "world_object2_orientation_x", Convert Camera Quaternion to Rotation Matrix -> Convert Hand/Object Rotation to a Rotation Matrix -> Compute the World Rotation -> Convert Back to Quaternion
              "world_object2_orientation_y",
              "world_object2_orientation_z",
              "world_object2_orientation_w"
            ]
          },
          "calibration.json": {
            "description": "Camera calibration parameters for the ZED stereo camera, including intrinsic and extrinsic details.",
            "file_type": "json",
            "fields": [
              "intrinsic_left",
              "intrinsic_right",
              "distortion_coefficients_left",
              "distortion_coefficients_right",
              "extrinsic_matrix"
            ]
          }
        }
      }
    },
    "acquisition_details": {
      "camera": "ZED Stereo Camera",
      "mounting": "Head-mounted",
      "capture_date": "StartDate: 2025-02-15 | EndDate: TBD",
      "environment": "Both indoor and outdoor environments"
    },
    "release_notes": {
      "1.0.0": "Initial release with head-mounted ZED stereo camera recordings, including synchronized RGB, depth, video, and motion data."
    }
  }
  